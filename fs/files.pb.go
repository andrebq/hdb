// Code generated by protoc-gen-go. DO NOT EDIT.
// source: files.proto

/*
Package fs is a generated protocol buffer package.

It is generated from these files:
	files.proto

It has these top-level messages:
	RefList
	NodeLink
	File
	Directory
*/
package fs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeType int32

const (
	NodeType_DIR  NodeType = 0
	NodeType_FILE NodeType = 1
)

var NodeType_name = map[int32]string{
	0: "DIR",
	1: "FILE",
}
var NodeType_value = map[string]int32{
	"DIR":  0,
	"FILE": 1,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RefList struct {
	Parents [][]byte `protobuf:"bytes,1,rep,name=parents,proto3" json:"parents,omitempty"`
}

func (m *RefList) Reset()                    { *m = RefList{} }
func (m *RefList) String() string            { return proto.CompactTextString(m) }
func (*RefList) ProtoMessage()               {}
func (*RefList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RefList) GetParents() [][]byte {
	if m != nil {
		return m.Parents
	}
	return nil
}

type NodeLink struct {
	Name string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ref  []byte   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Type NodeType `protobuf:"varint,3,opt,name=type,enum=fs.NodeType" json:"type,omitempty"`
}

func (m *NodeLink) Reset()                    { *m = NodeLink{} }
func (m *NodeLink) String() string            { return proto.CompactTextString(m) }
func (*NodeLink) ProtoMessage()               {}
func (*NodeLink) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodeLink) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeLink) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *NodeLink) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_DIR
}

type File struct {
	Parents     *RefList `protobuf:"bytes,1,opt,name=parents" json:"parents,omitempty"`
	ContentType string   `protobuf:"bytes,2,opt,name=contentType" json:"contentType,omitempty"`
	Content     []byte   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *File) GetParents() *RefList {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *File) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Directory struct {
	Parents  *RefList             `protobuf:"bytes,1,opt,name=parents" json:"parents,omitempty"`
	Children map[string]*NodeLink `protobuf:"bytes,2,rep,name=children" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Directory) Reset()                    { *m = Directory{} }
func (m *Directory) String() string            { return proto.CompactTextString(m) }
func (*Directory) ProtoMessage()               {}
func (*Directory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Directory) GetParents() *RefList {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *Directory) GetChildren() map[string]*NodeLink {
	if m != nil {
		return m.Children
	}
	return nil
}

func init() {
	proto.RegisterType((*RefList)(nil), "fs.RefList")
	proto.RegisterType((*NodeLink)(nil), "fs.NodeLink")
	proto.RegisterType((*File)(nil), "fs.File")
	proto.RegisterType((*Directory)(nil), "fs.Directory")
	proto.RegisterEnum("fs.NodeType", NodeType_name, NodeType_value)
}

func init() { proto.RegisterFile("files.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x35, 0x6d, 0x75, 0xdb, 0x97, 0x2a, 0x23, 0xa7, 0xa0, 0x08, 0xa1, 0x22, 0x04, 0x0f, 0x3d,
	0xcc, 0x83, 0xe2, 0xd5, 0x6d, 0x30, 0x18, 0x1e, 0x82, 0x7f, 0x60, 0x6e, 0x5f, 0x31, 0xac, 0xa6,
	0x25, 0x8d, 0x42, 0xff, 0x98, 0xbf, 0x4f, 0x92, 0x76, 0x75, 0xde, 0xbc, 0x7d, 0x5f, 0xde, 0xe3,
	0xbd, 0xf7, 0xbd, 0x00, 0x2d, 0x74, 0x89, 0x4d, 0x5e, 0xdb, 0xca, 0x55, 0x2c, 0x2a, 0x9a, 0xec,
	0x06, 0x46, 0x0a, 0x8b, 0xb5, 0x6e, 0x1c, 0xe3, 0x30, 0xaa, 0x37, 0x16, 0x8d, 0x6b, 0x38, 0x11,
	0xb1, 0x4c, 0xd5, 0x61, 0xcd, 0x14, 0x8c, 0x5f, 0xaa, 0x1d, 0xae, 0xb5, 0xd9, 0x33, 0x06, 0x89,
	0xd9, 0x7c, 0x20, 0x27, 0x82, 0xc8, 0x89, 0x0a, 0x33, 0x9b, 0x42, 0x6c, 0xb1, 0xe0, 0x91, 0x20,
	0x32, 0x55, 0x7e, 0x64, 0x02, 0x12, 0xd7, 0xd6, 0xc8, 0x63, 0x41, 0xe4, 0xc5, 0x2c, 0xcd, 0x8b,
	0x26, 0xf7, 0x0a, 0xaf, 0x6d, 0x8d, 0x2a, 0x20, 0x99, 0x86, 0x64, 0xa9, 0x4b, 0x64, 0xb7, 0xc7,
	0xae, 0x44, 0xd2, 0x19, 0xf5, 0xe4, 0x3e, 0xd3, 0x10, 0x81, 0x09, 0xa0, 0xdb, 0xca, 0x38, 0x34,
	0xce, 0x6b, 0x04, 0xab, 0x89, 0x3a, 0x7e, 0xf2, 0xf1, 0xfb, 0x35, 0xb8, 0xa6, 0xea, 0xb0, 0x66,
	0xdf, 0x04, 0x26, 0x73, 0x6d, 0x71, 0xeb, 0x2a, 0xdb, 0xfe, 0xd7, 0xf0, 0x01, 0xc6, 0xdb, 0x77,
	0x5d, 0xee, 0x2c, 0x1a, 0x1e, 0x89, 0x58, 0xd2, 0xd9, 0x95, 0xe7, 0x0d, 0x3a, 0xf9, 0x73, 0x8f,
	0x2e, 0x8c, 0xb3, 0xad, 0x1a, 0xc8, 0x97, 0x2b, 0x38, 0xff, 0x03, 0xf9, 0x76, 0xf6, 0xd8, 0xf6,
	0x85, 0xf9, 0x91, 0x65, 0x70, 0xfa, 0xb5, 0x29, 0x3f, 0xbb, 0x33, 0xe8, 0x6f, 0x3d, 0xbe, 0x60,
	0xd5, 0x41, 0x4f, 0xd1, 0x23, 0xb9, 0xbb, 0xee, 0x7a, 0x0f, 0xe7, 0x8d, 0x20, 0x9e, 0xaf, 0xd4,
	0xf4, 0x84, 0x8d, 0x21, 0x59, 0xae, 0xd6, 0x8b, 0x29, 0x79, 0x3b, 0x0b, 0xdf, 0x78, 0xff, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x2a, 0x67, 0x52, 0x0f, 0xd5, 0x01, 0x00, 0x00,
}
